package com.example.finalProject.services.jwt;
import java.util.*;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.example.finalProject.model.Role;
import com.example.finalProject.model.User;
import com.example.finalProject.repository.UserRepository;

@Service
public class UserDetailsServiceImpl implements UserDetailsService {
	
		@Autowired
		private UserRepository userRepository;
	
	@Override
	public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
		User user = userRepository.findFirstByEmail(email);
	        if(user == null){
	            throw new UsernameNotFoundException("User not found",null);
	        }
	        return new org.springframework.security.core.userdetails.User(user.getEmail(), user.getPassword(), new ArrayList<>());
	}
    
//	public Collection<? extends GrantedAuthority> getAuthorities(String email) {
//		User user = userRepository.findFirstByEmail(email);
//        Set<Role> roles = user.getrole();
//        List<SimpleGrantedAuthority> authorities = new ArrayList<>();
//         
//        for (Role role : roles) {
//            authorities.add(new SimpleGrantedAuthority(role.getname()));
//       
//        }
//        return authorities;
//    }
 
}
